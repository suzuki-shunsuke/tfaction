name: setup
description: setup
inputs:
  github_app_token:
    description: 'GitHub Access Token'
    required: true

  github_token:
    description: 'GitHub Access Token'
    required: false
    default: ${{ github.token }}
  ssh_key:
    description: 'SSH Key for Terraform Private Module'
    required: false
outputs:
  working_directory:
    description: working directory
    value: ${{ steps.target-config.outputs.working_directory }}
  s3_bucket_name_plan_file:
    description: S3 Bucket name for plan files
    value: ${{ steps.target-config.outputs.s3_bucket_name_plan_file}}
  s3_bucket_name_tfmigrate_history:
    description: S3 Bucket name for tfmigrate history files
    value: ${{ steps.target-config.outputs.s3_bucket_name_tfmigrate_history}}
runs:
  using: composite
  steps:
    - run: |
        curl -X POST "https://api.github.com/repos/$GITHUB_REPOSITORY/issues/${{ github.event.pull_request.number }}/labels" \
          -H "Authorization: token ${GITHUB_TOKEN}" \
          -H "Accept: application/json" \
          -H "Content-type: application/json" \
          -d "[{\"name\":\"${TFACTION_TARGET}\"}]"
      shell: bash
      if: github.event_name == 'pull_request'
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}

    - uses: suzuki-shunsuke/tfaction/get-target-config@main
      id: target-config

    - run: aqua i -l -a
      shell: bash
      working-directory: ${{ steps.target-config.outputs.working_directory }}

    - uses: aws-actions/configure-aws-credentials@50ac8dd1e1b10d09dac7b8727528b91bed831ac0 # v3.0.2
      if: steps.target-config.outputs.aws_assume_role_arn != ''
      with:
        role-to-assume: ${{ steps.target-config.outputs.aws_assume_role_arn }}
        role-session-name: samplerolesession
        aws-region: ${{ steps.target-config.outputs.aws_region }}

    - uses: suzuki-shunsuke/tfaction/export-aws-secrets-manager@main

    - uses: google-github-actions/auth@35b0e87d162680511bf346c299f71c9c5c379033 # v1.1.1
      if: steps.target-config.outputs.gcp_service_account != ''
      with:
        workload_identity_provider: ${{ steps.target-config.outputs.gcp_workload_identity_provider }}
        service_account: ${{ steps.target-config.outputs.gcp_service_account }}

    - uses: google-github-actions/setup-gcloud@e30db14379863a8c79331b04a9969f4c1e225e0b # v1.1.1
      if: steps.target-config.outputs.gcp_service_account != ''

    - uses: suzuki-shunsuke/tfaction/deploy-ssh-key@main
      if: inputs.ssh_key != ''
      with:
       ssh_key: ${{ inputs.ssh_key }}

    - run: |
        tempfile=$(mktemp)
        rm "$tempfile"
        echo "path=${tempfile}" >> "$GITHUB_OUTPUT"
      shell: bash
      if: |
        ! contains(fromJSON('["workflow_dispatch", "schedule"]'), github.event_name)
      id: ci-info
    - uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # tag=v3.0.2
      if: |
        ! contains(fromJSON('["workflow_dispatch", "schedule"]'), github.event_name)
      with:
        name: tfaction-ci-info
        path: ${{steps.ci-info.outputs.path}}
    - run: cat "${{steps.ci-info.outputs.path}}/env" | sed 's|^CI_INFO_TEMP_DIR=.*$|CI_INFO_TEMP_DIR=${{steps.ci-info.outputs.path}}|' >> "$GITHUB_ENV"
      if: |
        ! contains(fromJSON('["workflow_dispatch", "schedule"]'), github.event_name)
      shell: bash

    - uses: suzuki-shunsuke/github-action-terraform-init@2938445484362c1546311279b036e25dbb265a50 # tag=v0.1.4
      with:
        working_directory: ${{ steps.target-config.outputs.working_directory }}
        github_token: ${{ inputs.github_token }}
        github_app_token: ${{ inputs.github_app_token }}
        providers_lock_opts: ${{ steps.target-config.outputs.providers_lock_opts }}
