name: Scaffold a working directory
description: Scaffold a working directory
inputs:
  github_token:
    description: |
      GitHub Token
      No permission is necessary.
    required: false
    default: ${{ github.token }}
outputs:
  working_directory:
    description: Working Directory
    value: ${{ steps.target-config.outputs.working_directory }}

runs:
  using: composite
  steps:
    - uses: suzuki-shunsuke/tfaction/js@main
      id: global-config
      with:
        action: get-global-config
    - uses: suzuki-shunsuke/tfaction/js@main
      id: target-config
      with:
        action: get-target-config
      env:
        TFACTION_JOB_TYPE: scaffold_working_dir

    - run: mkdir -p "$(dirname "$WORKING_DIR")"
      shell: bash
      env:
        WORKING_DIR: ${{steps.target-config.outputs.working_directory}}

    - run: cp -R "$TEMP_DIR" "$WORKING_DIR"
      shell: bash
      env:
        TEMP_DIR: ${{steps.target-config.outputs.template_dir}}
        WORKING_DIR: ${{steps.target-config.outputs.working_directory}}

    - run: echo '{}' > "$FILE"
      shell: bash
      working-directory: ${{steps.target-config.outputs.working_directory}}
      env:
        FILE: ${{steps.global-config.outputs.working_directory_file}}

    - run: cp "$GITHUB_ACTION_PATH/tfmigrate.hcl" .tfmigrate.hcl
      if: steps.target-config.outputs.s3_bucket_name_tfmigrate_history != ''
      shell: bash
      working-directory: ${{steps.target-config.outputs.working_directory}}
    - run: cp "$GITHUB_ACTION_PATH/tfmigrate-gcs.hcl" .tfmigrate.hcl
      if: steps.target-config.outputs.gcs_bucket_name_tfmigrate_history != ''
      shell: bash
      working-directory: ${{steps.target-config.outputs.working_directory}}

    - run: aqua init
      shell: bash
      working-directory: ${{steps.target-config.outputs.working_directory}}
      if: env.TFACTION_SKIP_ADDING_AQUA_PACKAGES != 'true'
      env:
        AQUA_GITHUB_TOKEN: ${{inputs.github_token}}

    - run: aqua g -i hashicorp/terraform
      shell: bash
      working-directory: ${{steps.target-config.outputs.working_directory}}
      if: env.TFACTION_SKIP_ADDING_AQUA_PACKAGES != 'true'
      env:
        AQUA_GITHUB_TOKEN: ${{inputs.github_token}}

    - run: aqua g -i terraform-linters/tflint
      shell: bash
      working-directory: ${{steps.target-config.outputs.working_directory}}
      if: env.TFACTION_SKIP_ADDING_AQUA_PACKAGES != 'true' && steps.target-config.outputs.enable_tflint == 'true'
      env:
        AQUA_GITHUB_TOKEN: ${{inputs.github_token}}

    - run: aqua g -i aquasecurity/tfsec
      shell: bash
      working-directory: ${{steps.target-config.outputs.working_directory}}
      if: env.TFACTION_SKIP_ADDING_AQUA_PACKAGES != 'true' && steps.target-config.outputs.enable_tfsec == 'true'
      env:
        AQUA_GITHUB_TOKEN: ${{inputs.github_token}}

    - run: aqua g -i aquasecurity/trivy
      shell: bash
      working-directory: ${{steps.target-config.outputs.working_directory}}
      if: env.TFACTION_SKIP_ADDING_AQUA_PACKAGES != 'true' && steps.target-config.outputs.enable_trivy == 'true'
      env:
        AQUA_GITHUB_TOKEN: ${{inputs.github_token}}

    - run: git ls-files --modified --others --exclude-standard | xargs -n 1 sed -i "s|%%S3_BUCKET_NAME_TFMIGRATE_HISTORY%%|${BUCKET}|g"
      if: steps.target-config.outputs.s3_bucket_name_tfmigrate_history != ''
      shell: bash
      working-directory: ${{steps.target-config.outputs.working_directory}}
      env:
        BUCKET: ${{steps.target-config.outputs.s3_bucket_name_tfmigrate_history}}
    - run: git ls-files --modified --others --exclude-standard | xargs -n 1 sed -i "s|%%GCS_BUCKET_NAME_TFMIGRATE_HISTORY%%|${GCS_BUCKET}|g"
      if: steps.target-config.outputs.gcs_bucket_name_tfmigrate_history != ''
      shell: bash
      working-directory: ${{steps.target-config.outputs.working_directory}}
      env:
        GCS_BUCKET: ${{steps.target-config.outputs.gcs_bucket_name_tfmigrate_history}}

    - run: git ls-files --modified --others --exclude-standard | xargs -n 1 sed -i "s|%%TARGET%%|${TFACTION_TARGET}|g"
      shell: bash
      working-directory: ${{steps.target-config.outputs.working_directory}}
      env:
        TFACTION_TARGET: ${{steps.target-config.outputs.target}}
