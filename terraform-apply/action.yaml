name: terraform apply
description: terraform apply
inputs:
  github_token:
    description: |
      GitHub Access Token
      pull-requests:write - Create pull request comments and labels
      issues:write - Create labels
      actions:read - Download artifacts
      contents:write - Update pull request branches
    required: false
    default: ${{ github.token }}
  secrets:
    required: false
    default: "{}"

outputs:
  issue_number:
    description: Drift Issue number
    value: ${{ steps.drift-issue.outputs.issue_number }}
  issue_state:
    description: Drift Issue state
    value: ${{ steps.drift-issue.outputs.issue_state }}

runs:
  using: composite
  steps:
    - uses: suzuki-shunsuke/tfaction/get-target-config@main
      id: target-config
    - uses: suzuki-shunsuke/tfaction/get-global-config@main
      id: global-config
    - uses: suzuki-shunsuke/tfaction/check-terraform-skip@main
      id: check-terraform-skip
      with:
        labels: ${{ env.CI_INFO_TEMP_DIR }}/labels.txt
        pr_author: ${{ env.CI_INFO_PR_AUTHOR }}
        skip_label_prefix: ${{ steps.global-config.outputs.label_prefix_skip }}

    - uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
      id: env
      with:
        script: |
          return Object.assign(JSON.parse(${{inputs.secrets}}), {
            GITHUB_TOKEN: process.env.GITHUB_TOKEN,
            TFACTION_DRIFT_ISSUE_REPO_OWNER: process.env.TFACTION_DRIFT_ISSUE_REPO_OWNER,
            TFACTION_DRIFT_ISSUE_REPO_NAME: process.env.TFACTION_DRIFT_ISSUE_REPO_NAME,
            DISABLE_UPDATE_RELATED_PULL_REQUESTS: process.env.DISABLE_UPDATE_RELATED_PULL_REQUESTS,
            PLAN_WORKFLOW_NAME: process.env.PLAN_WORKFLOW_NAME,
          })
      env:
        GITHUB_TOKEN: ${{inputs.github_token}}
        TFACTION_DRIFT_ISSUE_REPO_OWNER: ${{steps.global-config.outputs.drift_issue_repo_owner}}
        TFACTION_DRIFT_ISSUE_REPO_NAME: ${{steps.global-config.outputs.drift_issue_repo_name}}
        DISABLE_UPDATE_RELATED_PULL_REQUESTS: ${{steps.global-config.outputs.disable_update_related_pull_requests}}
        PLAN_WORKFLOW_NAME: ${{steps.global-config.outputs.plan_workflow_name}}

    - run: bash ${{ github.action_path }}/main.sh
      id: apply
      working-directory: ${{ steps.target-config.outputs.working_directory }}
      shell: bash
      if: "!fromJSON(steps.check-terraform-skip.outputs.skip_terraform)"
      env: ${{fromJSON(steps.env.outputs.result)}}
