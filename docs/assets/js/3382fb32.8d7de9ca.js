"use strict";(self.webpackChunktfaction=self.webpackChunktfaction||[]).push([[264],{1295:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>m,frontMatter:()=>r,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"config/tfaction-yaml","title":"tfaction.yaml","description":"JSON Schema","source":"@site/docs/config/tfaction-yaml.md","sourceDirName":"config","slug":"/config/tfaction-yaml","permalink":"/tfaction/docs/config/tfaction-yaml","draft":false,"unlisted":false,"editUrl":"https://github.com/suzuki-shunsuke/tfaction-docs/edit/main/docs/config/tfaction-yaml.md","tags":[],"version":"current","sidebarPosition":200,"frontMatter":{"sidebar_position":200},"sidebar":"tutorialSidebar","previous":{"title":"tfaction-root.yaml","permalink":"/tfaction/docs/config/tfaction-root-yaml"},"next":{"title":"GitHub Access Token","permalink":"/tfaction/docs/config/github-token"}}');var o=t(4848),i=t(8453);const r={sidebar_position:200},s="tfaction.yaml",c={},l=[{value:"JSON Schema",id:"json-schema",level:2},{value:"\ud83d\udca1 Input Complementation by YAML Language Server",id:"-input-complementation-by-yaml-language-server",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"tfactionyaml",children:"tfaction.yaml"})}),"\n",(0,o.jsx)(n.h2,{id:"json-schema",children:"JSON Schema"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://github.com/suzuki-shunsuke/tfaction/blob/main/schema/tfaction.json",children:"JSON Schema"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://suzuki-shunsuke.github.io/tfaction/config/tfaction.html",children:"Generated document from JSON Schema"})}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"-input-complementation-by-yaml-language-server",children:"\ud83d\udca1 Input Complementation by YAML Language Server"}),"\n",(0,o.jsx)(n.p,{children:"Add a code comment to tfaction.yaml:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"# yaml-language-server: $schema=https://raw.githubusercontent.com/suzuki-shunsuke/tfaction/refs/heads/latest/schema/tfaction.json\n"})}),"\n",(0,o.jsxs)(n.p,{children:["If you specify a branch like ",(0,o.jsx)(n.code,{children:"latest"})," as version, editors can't reflect the update of JSON Schema well as they cache JSON Schema.\nYou would need to do something like reopening the file.\nSo it's good to specify semver and update it periodically."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"# yaml-language-server: $schema=https://raw.githubusercontent.com/suzuki-shunsuke/tfaction/refs/tags/v1.15.5/schema/tfaction.json\n"})}),"\n",(0,o.jsx)(n.p,{children:"Using Renovate and our Renovate Config Preset, you can automate the update:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "extends": [\n    "github>suzuki-shunsuke/renovate-config:yaml-language-server#3.1.0"\n  ]\n}\n'})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsxs)(n.p,{children:["Please add ",(0,o.jsx)(n.code,{children:"tfaction.yaml"})," in each working directory for tfaction to detect working directories."]}),"\n",(0,o.jsxs)(n.p,{children:["You can change the file name by the configuration ",(0,o.jsx)(n.code,{children:"working_directory_file"}),"."]}),"\n",(0,o.jsx)(n.p,{children:"All fields are optional."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"{}\n"})}),"\n",(0,o.jsxs)(n.p,{children:["You can override the configuration of ",(0,o.jsx)(n.code,{children:"tfaction-root.yaml"})," by ",(0,o.jsx)(n.code,{children:"tfaction.yaml"}),"."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"aws_region:\ns3_bucket_name_tfmigrate_history:\ntemplate_dir:\ngcs_bucket_name_tfmigrate_history:\naws_assume_role_arn:\ngcp_service_account:\ngcp_workload_identity_provider:\n\n# tfaction >= v1.5.0\n# Google Cloud Service Account for Terraform Backend.\n# By default, gcp_service_account and gcp_workload_identity_provider are used.\ngcp_remote_backend_service_account: terraform@my-project.iam.gserviceaccount.com\ngcp_remote_backend_workload_identity_provider: 'projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider'\n\nterraform_command: terraform\nenv:\n  # Environment variables\n  FOO: foo\nsecrets:\nterraform_plan_config:\n  aws_assume_role_arn: arn:aws:iam::000000000000:role/GitHubActions_Terraform_AWS_terraform_plan\n\n  # AWS IAM Role Session Name\n  # tfaction >= v1.11.0\n  # This is optional.\n  # The maximum length of the session name is 64.\n  # And it must satisfy regular expression pattern `[\\w+=,.@-]*`.\n  # The default value of session name is\n  # 1. tfaction-{plan or apply}-{normalized target}-${GitHub Actions Run ID}\n  # 2. tfaction-{plan or apply}-{normalized target}\n  # 3. tfaction-{plan or apply}-${GitHub Actions Run ID}\n  # 4. tfaction-{plan or apply}\n  # / in the default targets are converted to `_`.\n  # And if target is too long, it is removed from the default session name.\n  aws_role_session_name: tfplan\n\n  env:\n    # Environment variables\n    FOO: foo\ntfmigrate_plan_config:\n  aws_assume_role_arn: arn:aws:iam::000000000000:role/GitHubActions_Terraform_AWS_tfmigrate_plan\nterraform_apply_config:\n  aws_assume_role_arn: arn:aws:iam::000000000000:role/GitHubActions_Terraform_AWS_terraform_apply\ntfmigrate_apply_config:\n  aws_assume_role_arn: arn:aws:iam::000000000000:role/GitHubActions_Terraform_AWS_tfmigrate_apply\ndrift_detection:\n  enabled: false\n\n# tfaction >= v1.8.0\nconftest:\n  disable_all: true\n  policies:\n    - policy: policy/tf\n      tf: true\n"})})]})}function m(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>s});var a=t(6540);const o={},i=a.createContext(o);function r(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);