"use strict";(self.webpackChunktfaction=self.webpackChunktfaction||[]).push([[744],{5788:(e,t,r)=>{r.d(t,{Iu:()=>p,yg:()=>d});var n=r(1504);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},y=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(r),y=o,d=u["".concat(c,".").concat(y)]||u[y]||f[y]||a;return r?n.createElement(d,i(i({ref:t},p),{},{components:r})):n.createElement(d,i({ref:t},p))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=y;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[u]="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}y.displayName="MDXCreateElement"},8988:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>f,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var n=r(5072),o=(r(1504),r(5788));const a={sidebar_position:600},i="Validate Terraform Plan Result with Conftest",l={unversionedId:"feature/conftest",id:"feature/conftest",title:"Validate Terraform Plan Result with Conftest",description:"About Conftest, please see https://www.conftest.dev/ .",source:"@site/docs/feature/conftest.md",sourceDirName:"feature",slug:"/feature/conftest",permalink:"/tfaction/docs/feature/conftest",draft:!1,editUrl:"https://github.com/suzuki-shunsuke/tfaction-docs/edit/main/docs/feature/conftest.md",tags:[],version:"current",sidebarPosition:600,frontMatter:{sidebar_position:600},sidebar:"tutorialSidebar",previous:{title:"Manage Terraform Modules",permalink:"/tfaction/docs/feature/module"},next:{title:"Support skipping terraform plan and terraform apply in case of pull request by Renovate",permalink:"/tfaction/docs/feature/support-skipping-terraform-renovate-pr"}},c={},s=[{value:"Policy directory",id:"policy-directory",level:2}],p={toc:s},u="wrapper";function f(e){let{components:t,...r}=e;return(0,o.yg)(u,(0,n.c)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"validate-terraform-plan-result-with-conftest"},"Validate Terraform Plan Result with Conftest"),(0,o.yg)("p",null,"About Conftest, please see ",(0,o.yg)("a",{parentName:"p",href:"https://www.conftest.dev/"},"https://www.conftest.dev/")," ."),(0,o.yg)("p",null,(0,o.yg)("a",{parentName:"p",href:"https://www.openpolicyagent.org/docs/latest/terraform/"},"https://www.openpolicyagent.org/docs/latest/terraform/")),(0,o.yg)("p",null,"tfaction supports validating Terraform Plan Result with Conftest."),(0,o.yg)("p",null,"If Terraform Plan Result violate your Conftest Policy, the violation is notified as Pull Request Comment."),(0,o.yg)("p",null,(0,o.yg)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/13323303/150035710-249c4cbd-47fa-46d7-ae0d-28ab4ace1a64.png",alt:"image"})),(0,o.yg)("p",null,"tfaction doesn't provide any Conftest Policy. Please write your Conftest Policy freely."),(0,o.yg)("p",null,"We recommend writing the document about Conftest Policy per policy."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre"},"github-comment.yaml\npolicy/\n  github_issue_label_description.rego # Policy\n  github_issue_label_description_test.rego # Policy Test\n  github_issue_label_description.md # Policy Document\n")),(0,o.yg)("p",null,(0,o.yg)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/13323303/150035773-1702fba7-5058-412f-b41c-f69793237dd7.png",alt:"image"})),(0,o.yg)("h2",{id:"policy-directory"},"Policy directory"),(0,o.yg)("p",null,"tfaction >= v1.1.0"),(0,o.yg)("p",null,"You can change the directory by the setting ",(0,o.yg)("inlineCode",{parentName:"p"},"conftest_policy_directory")," in tfaction-root.yaml."),(0,o.yg)("p",null,"e.g. tfaction-root.yaml"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-yaml"},"conftest_policy_directory: terraform/policy\n")),(0,o.yg)("p",null,'The default value is "policy".\nIf ',(0,o.yg)("inlineCode",{parentName:"p"},"conftest_policy_directory")," isn't set and the directory policy doesn't exist, contest is skipped.\nIf ",(0,o.yg)("inlineCode",{parentName:"p"},"conftest_policy_directory")," is set but the directory doesn't exist, the action fails."))}f.isMDXComponent=!0}}]);