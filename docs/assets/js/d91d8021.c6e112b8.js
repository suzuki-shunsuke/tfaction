"use strict";(self.webpackChunktfaction=self.webpackChunktfaction||[]).push([[330],{2587:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>c,toc:()=>d});var r=n(4848),o=n(5680);const a={},i="Run CI on working directories that depend on a updated local path Module",c={id:"feature/local-path-module",title:"Run CI on working directories that depend on a updated local path Module",description:"tfaction >= v1.3.0 #1528",source:"@site/docs/feature/local-path-module.md",sourceDirName:"feature",slug:"/feature/local-path-module",permalink:"/tfaction/docs/feature/local-path-module",draft:!1,unlisted:!1,editUrl:"https://github.com/suzuki-shunsuke/tfaction-docs/edit/main/docs/feature/local-path-module.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Use a Terraform compatible tool",permalink:"/tfaction/docs/feature/use-terraform-compatible-tool"},next:{title:"Configuration",permalink:"/tfaction/docs/config/"}},l={},d=[];function s(e){const t={a:"a",code:"code",h1:"h1",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.RP)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"run-ci-on-working-directories-that-depend-on-a-updated-local-path-module",children:"Run CI on working directories that depend on a updated local path Module"}),"\n",(0,r.jsxs)(t.p,{children:["tfaction >= v1.3.0 ",(0,r.jsx)(t.a,{href:"https://github.com/suzuki-shunsuke/tfaction/pull/1528",children:"#1528"})]}),"\n",(0,r.jsxs)(t.p,{children:["By default, tfaction runs CI on only working directories where any code is updated.\nThis means even if a working directory depends on a ",(0,r.jsx)(t.a,{href:"https://developer.hashicorp.com/terraform/language/modules/sources#local-paths",children:"local path Module"})," out of the working directory and the module is updated, CI isn't run on the working directory."]}),"\n",(0,r.jsx)(t.p,{children:"e.g."}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"A working directory A depends on local path Module B"}),"\n",(0,r.jsx)(t.li,{children:"Module B is located out of the working directory A"}),"\n",(0,r.jsx)(t.li,{children:"In a pull request C, working directory A isn't changed but the module B is changed"}),"\n",(0,r.jsx)(t.li,{children:"Then CI isn't run on the working directory A by default"}),"\n"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"working directory A/\nmodules/\n  module B\n"})}),"\n",(0,r.jsx)(t.p,{children:"To run CI on the working directory A too, please update tfaction-root.yaml as the following."}),"\n",(0,r.jsx)(t.p,{children:"tfaction-root.yaml"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-yaml",children:"update_local_path_module_caller:\n  enabled: true\n"})}),"\n",(0,r.jsxs)(t.p,{children:["This feature depends on ",(0,r.jsx)(t.a,{href:"https://github.com/hashicorp/terraform-config-inspect",children:"terraform-config-inspect"}),", so you have to install it.\nSame with other tools, you can install terraform-config-inspect with ",(0,r.jsx)(t.a,{href:"https://aquaproj.github.io/",children:"aqua"}),"."]}),"\n",(0,r.jsx)(t.p,{children:"e.g."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-yaml",children:"packages:\n  - name: hashicorp/terraform-config-inspect\n    version: a34142ec2a72dd916592afd3247dd354f1cc7e5c\n"})}),"\n",(0,r.jsx)(t.p,{children:"In that case, Go is required."}),"\n",(0,r.jsx)(t.p,{children:"If this feature is enabled, when a module is updated in a pull request, CI is run on working directories depending on the module.\nThe module dependency is checked recursively.\nFor example, in the above case if the module B depends on a module C and module C is updated in a pull request,\nCI is run on the working directory A even if the working directory A and the module B aren't updated."})]})}function u(e={}){const{wrapper:t}={...(0,o.RP)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(s,{...e})}):s(e)}},5680:(e,t,n)=>{n.d(t,{RP:()=>d});var r=n(6540);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),d=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=d(n),h=o,f=p["".concat(l,".").concat(h)]||p[h]||s[h]||a;return n?r.createElement(f,i(i({ref:t},u),{},{components:n})):r.createElement(f,i({ref:t},u))}));u.displayName="MDXCreateElement"}}]);