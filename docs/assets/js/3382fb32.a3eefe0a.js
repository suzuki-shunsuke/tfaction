"use strict";(self.webpackChunktfaction=self.webpackChunktfaction||[]).push([[264],{1295:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>s,contentTitle:()=>c,default:()=>d,frontMatter:()=>r,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"config/tfaction-yaml","title":"tfaction.yaml","description":"* JSON Schema","source":"@site/docs/config/tfaction-yaml.md","sourceDirName":"config","slug":"/config/tfaction-yaml","permalink":"/tfaction/docs/config/tfaction-yaml","draft":false,"unlisted":false,"editUrl":"https://github.com/suzuki-shunsuke/tfaction-docs/edit/main/docs/config/tfaction-yaml.md","tags":[],"version":"current","sidebarPosition":200,"frontMatter":{"sidebar_position":200},"sidebar":"tutorialSidebar","previous":{"title":"tfaction-root.yaml","permalink":"/tfaction/docs/config/tfaction-root-yaml"},"next":{"title":"GitHub Access Token","permalink":"/tfaction/docs/config/github-token"}}');var a=t(4848),i=t(8453);const r={sidebar_position:200},c="tfaction.yaml",s={},l=[];function f(n){const e={a:"a",code:"code",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.header,{children:(0,a.jsx)(e.h1,{id:"tfactionyaml",children:"tfaction.yaml"})}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.a,{href:"https://github.com/suzuki-shunsuke/tfaction/blob/main/schema/tfaction.json",children:"JSON Schema"})}),"\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.a,{href:"https://suzuki-shunsuke.github.io/tfaction/config/tfaction.html",children:"Generated document from JSON Schema"})}),"\n"]}),"\n",(0,a.jsxs)(e.p,{children:["Please add ",(0,a.jsx)(e.code,{children:"tfaction.yaml"})," in each working directory for tfaction to detect working directories."]}),"\n",(0,a.jsxs)(e.p,{children:["You can change the file name by the configuration ",(0,a.jsx)(e.code,{children:"working_directory_file"}),"."]}),"\n",(0,a.jsx)(e.p,{children:"All fields are optional."}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-yaml",children:"{}\n"})}),"\n",(0,a.jsxs)(e.p,{children:["You can override the configuration of ",(0,a.jsx)(e.code,{children:"tfaction-root.yaml"})," by ",(0,a.jsx)(e.code,{children:"tfaction.yaml"}),"."]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-yaml",children:"aws_region:\ns3_bucket_name_tfmigrate_history:\ntemplate_dir:\ngcs_bucket_name_tfmigrate_history:\naws_assume_role_arn:\ngcp_service_account:\ngcp_workload_identity_provider:\n\n# tfaction >= v1.5.0\n# Google Cloud Service Account for Terraform Backend.\n# By default, gcp_service_account and gcp_workload_identity_provider are used.\ngcp_remote_backend_service_account: terraform@my-project.iam.gserviceaccount.com\ngcp_remote_backend_workload_identity_provider: 'projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider'\n\nterraform_command: terraform\nenv:\n  # Environment variables\n  FOO: foo\nsecrets:\nterraform_plan_config:\n  aws_assume_role_arn: arn:aws:iam::000000000000:role/GitHubActions_Terraform_AWS_terraform_plan\n\n  # AWS IAM Role Session Name\n  # tfaction >= v1.11.0\n  # This is optional.\n  # The maximum length of the session name is 64.\n  # And it must satisfy regular expression pattern `[\\w+=,.@-]*`.\n  # The default value of session name is\n  # 1. tfaction-{plan or apply}-{normalized target}-${GitHub Actions Run ID}\n  # 2. tfaction-{plan or apply}-{normalized target}\n  # 3. tfaction-{plan or apply}-${GitHub Actions Run ID}\n  # 4. tfaction-{plan or apply}\n  # / in the default targets are converted to `_`.\n  # And if target is too long, it is removed from the default session name.\n  aws_role_session_name: tfplan\n\n  env:\n    # Environment variables\n    FOO: foo\ntfmigrate_plan_config:\n  aws_assume_role_arn: arn:aws:iam::000000000000:role/GitHubActions_Terraform_AWS_tfmigrate_plan\nterraform_apply_config:\n  aws_assume_role_arn: arn:aws:iam::000000000000:role/GitHubActions_Terraform_AWS_terraform_apply\ntfmigrate_apply_config:\n  aws_assume_role_arn: arn:aws:iam::000000000000:role/GitHubActions_Terraform_AWS_tfmigrate_apply\ndrift_detection:\n  enabled: false\n\n# tfaction >= v1.8.0\nconftest:\n  disable_all: true\n  policies:\n    - policy: policy/tf\n      tf: true\n"})})]})}function d(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(f,{...n})}):f(n)}},8453:(n,e,t)=>{t.d(e,{R:()=>r,x:()=>c});var o=t(6540);const a={},i=o.createContext(a);function r(n){const e=o.useContext(i);return o.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:r(n.components),o.createElement(i.Provider,{value:e},n.children)}}}]);