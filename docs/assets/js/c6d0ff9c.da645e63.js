"use strict";(self.webpackChunktfaction=self.webpackChunktfaction||[]).push([[932],{6109:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>l,frontMatter:()=>o,metadata:()=>c,toc:()=>u});var n=r(4848),i=r(5680);const o={sidebar_position:50},a="Support Monorepo with GitHub Actions build matrix",c={id:"feature/build-matrix",title:"Support Monorepo with GitHub Actions build matrix",description:"tfaction supports Monorepo, which has multiple working directories in the same repository.",source:"@site/docs/feature/build-matrix.md",sourceDirName:"feature",slug:"/feature/build-matrix",permalink:"/tfaction/docs/feature/build-matrix",draft:!1,unlisted:!1,editUrl:"https://github.com/suzuki-shunsuke/tfaction-docs/edit/main/docs/feature/build-matrix.md",tags:[],version:"current",sidebarPosition:50,frontMatter:{sidebar_position:50},sidebar:"tutorialSidebar",previous:{title:"tfaction",permalink:"/tfaction/docs/"},next:{title:"Notify the result of terraform plan and apply with tfcmt",permalink:"/tfaction/docs/feature/tfcmt"}},s={},u=[];function p(e){const t={a:"a",h1:"h1",img:"img",p:"p",...(0,i.RP)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"support-monorepo-with-github-actions-build-matrix",children:"Support Monorepo with GitHub Actions build matrix"}),"\n",(0,n.jsx)(t.p,{children:"tfaction supports Monorepo, which has multiple working directories in the same repository."}),"\n",(0,n.jsxs)(t.p,{children:["tfaction lists up target working directories and runs builds in parallel by ",(0,n.jsx)(t.a,{href:"https://docs.github.com/en/actions/using-workflows/advanced-workflow-features#using-a-build-matrix",children:"GitHub Actions build matrix"}),"."]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{src:"https://user-images.githubusercontent.com/13323303/151699474-b6cf9927-a0d1-4eb7-85fd-19504432362c.png",alt:"image"})}),"\n",(0,n.jsx)(t.p,{children:"Even if the number of working directories in the repository becomes huge, builds are run against only working directories which are changed in the pull request.\nThis is scalable."})]})}function l(e={}){const{wrapper:t}={...(0,i.RP)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}},5680:(e,t,r)=>{r.d(t,{RP:()=>u});var n=r(6540);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},l=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),f=u(r),d=i,m=f["".concat(s,".").concat(d)]||f[d]||p[d]||o;return r?n.createElement(m,a(a({ref:t},l),{},{components:r})):n.createElement(m,a({ref:t},l))}));l.displayName="MDXCreateElement"}}]);