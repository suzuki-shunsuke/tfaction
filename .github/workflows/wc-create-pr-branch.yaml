---
name: wc-create-pr-branch
run-name: wc-create-pr-branch (${{inputs.pr}})
on:
  workflow_call:
    inputs:
      pr:
        description: "Pull Request Number"
        required: true
        type: number
      is_comment:
        description: If the comment is posted
        required: false
        default: false
        type: boolean
    secrets:
      gh_app_id:
        required: true
      gh_app_private_key:
        required: true

jobs:
  create-pr-branch:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - run: gh pr checkout "$PR"
        if: inputs.pr != ''
        env:
          GITHUB_TOKEN: ${{github.token}}
          PR: ${{inputs.pr}}

      - uses: aquaproj/aqua-installer@f13c5d2f0357708d85477aabe50fd3f725528745 # v3.1.0
        with:
          aqua_version: v2.40.0
        env:
          GITHUB_TOKEN: ${{github.token}}
      - run: cmdx build
        shell: bash

      - uses: suzuki-shunsuke/release-js-action@e171d621cbdcf5e0f64b9746ed88a2210ef51bdd # v0.1.2
        with:
          version: pr/${{inputs.pr}}
          is_comment: ${{inputs.is_comment}}

      - name: Install dependencies
        uses: ./install

      - name: Test js/get-target-config
        uses: ./js
        id: js-target-config
        with:
          action: get-target-config
        env:
          TFACTION_CONFIG: js/test/tfaction-root.yaml
          TFACTION_TARGET: js/test/aws/foo/dev
          TFACTION_JOB_TYPE: terraform
      - name: Test get-target-config
        uses: ./get-target-config
        id: target-config
        env:
          TFACTION_CONFIG: js/test/tfaction-root.yaml
          TFACTION_TARGET: js/test/aws/foo/dev
          TFACTION_JOB_TYPE: terraform

      - name: Test js/get-global-config
        uses: ./js
        id: js-global-config
        with:
          action: get-global-config
        env:
          TFACTION_CONFIG: js/test/tfaction-root.yaml
          TFACTION_JOB_TYPE: terraform
      - name: Test get-global-config
        uses: ./get-global-config
        id: global-config
        env:
          TFACTION_CONFIG: js/test/tfaction-root.yaml
          TFACTION_JOB_TYPE: terraform

      - name: Test js/check-terraform-skip
        uses: ./js
        id: js-check-terraform-skip
        with:
          action: check-terraform-skip
          labels: js/test/labels.txt
          skip_label_prefix: "skip:"
          pr_author: suzuki-shunsuke
        env:
          TFACTION_CONFIG: js/test/tfaction-root.yaml
          TFACTION_JOB_TYPE: terraform
      - name: Test check-terraform-skip
        uses: ./check-terraform-skip
        id: check-terraform-skip
        with:
          labels: js/test/labels.txt
          skip_label_prefix: "skip:"
          pr_author: suzuki-shunsuke
        env:
          TFACTION_CONFIG: js/test/tfaction-root.yaml
          TFACTION_JOB_TYPE: terraform

      - name: Test js/list-changed-modules
        uses: ./js
        id: js-list-changed-modules
        with:
          action: list-changed-modules
          changed_files: js/test/changed_files.txt
          config_files: js/test/modules.txt
      - name: Test list-changed-modules
        uses: ./list-changed-modules
        id: list-changed-modules
        with:
          changed_files: js/test/changed_files.txt
          config_files: js/test/modules.txt

      - name: Test js/list-module-callers
        uses: ./js
        id: js-list-module-callers
        with:
          action: list-module-callers
          module_files: js/test/list-module-callers/module_files.txt
          config_files: js/test/list-module-callers/config_files.txt
      - name: Test list-module-callers
        uses: ./list-module-callers
        id: list-module-callers
        with:
          module_files: js/test/list-module-callers/module_files.txt
          config_files: js/test/list-module-callers/config_files.txt

      - name: Test js/list-targets-with-changed-files
        uses: ./js
        id: js-list-targets-with-changed-files
        with:
          action: list-targets-with-changed-files
          changed_files: js/test/changed_files.txt
          labels: js/test/labels.txt
          module_files: js/test/list-module-callers/module_files.txt
          config_files: js/test/list-module-callers/config_files.txt
          pull_request: "" # A path to ci-info's pr.json
          module_callers: ""
        env:
          TFACTION_CONFIG: js/test/tfaction-root.yaml
      - name: Test list-targets-with-changed-files
        uses: ./list-targets-with-changed-files
        id: list-targets-with-changed-files
        with:
          changed_files: js/test/changed_files.txt
          labels: js/test/labels.txt
          module_files: js/test/list-module-callers/module_files.txt
          config_files: js/test/list-module-callers/config_files.txt
          pull_request: "" # A path to ci-info's pr.json
          module_callers: ""
        env:
          TFACTION_CONFIG: js/test/tfaction-root.yaml

      - name: Test conftest
        uses: ./conftest
        id: conftest
        env:
          TFACTION_CONFIG: js/test/tfaction-root.yaml
          TFACTION_TARGET: js/test/aws/foo/dev

      - id: token
        uses: tibdex/github-app-token@3beb63f4bd073e61482598c45c71c1019b59b73a # v2.1.0
        with:
          app_id: ${{secrets.gh_app_id}}
          private_key: ${{secrets.gh_app_private_key}}
          permissions: >-
            {
              "pull_requests": "write",
              "contents": "write"
            }
          repositories: >-
            ["${{github.event.repository.name}}"]

      - name: Test setup
        uses: ./setup
        with:
          github_token: ${{steps.token.outputs.token}}
        id: setup
        if: |
          ! github.event.pull_request.head.repo.fork
        env:
          TFACTION_CONFIG: setup/test/tfaction-root.yaml
          TFACTION_TARGET: setup/test/foo
          TFACTION_WORKING_DIR: setup/test/foo
          TFACTION_JOB_TYPE: terraform

      - name: Test OpenTofu (setup)
        uses: ./setup
        with:
          github_token: ${{steps.token.outputs.token}}
        if: |
          ! github.event.pull_request.head.repo.fork
        env:
          TFACTION_CONFIG: setup/test/opentofu/tfaction-root.yaml
          TFACTION_TARGET: setup/test/opentofu/foo
          TFACTION_WORKING_DIR: setup/test/opentofu/foo
          TFACTION_JOB_TYPE: terraform

      - name: Test test (OpenTofu)
        uses: ./test
        with:
          github_token: ${{steps.token.outputs.token}}
        if: |
          ! github.event.pull_request.head.repo.fork
        env:
          TFACTION_CONFIG: setup/test/opentofu/tfaction-root.yaml
          TFACTION_TARGET: setup/test/opentofu/foo
          TFACTION_WORKING_DIR: setup/test/opentofu/foo
          TFACTION_JOB_TYPE: terraform

      - name: Test test
        uses: ./test
        with:
          github_token: ${{steps.token.outputs.token}}
        id: test
        if: |
          ! github.event.pull_request.head.repo.fork
        env:
          TFACTION_CONFIG: setup/test/tfaction-root.yaml
          TFACTION_TARGET: setup/test/foo
          TFACTION_WORKING_DIR: setup/test/foo
          TFACTION_JOB_TYPE: terraform

      - name: Test plan
        uses: ./plan
        id: plan
        with:
          github_token: ${{steps.token.outputs.token}}
        if: |
          ! github.event.pull_request.head.repo.fork
        env:
          TFACTION_CONFIG: setup/test/tfaction-root.yaml
          TFACTION_TARGET: setup/test/foo
          TFACTION_WORKING_DIR: setup/test/foo
          TFACTION_JOB_TYPE: terraform

      - name: Test test-module
        uses: ./test-module
        with:
          github_token: ${{steps.token.outputs.token}}
        if: |
          ! github.event.pull_request.head.repo.fork
        env:
          TFACTION_CONFIG: js/test/tfaction-root.yaml
          TFACTION_TARGET: js/test/modules/foo

      - name: Outputs actions' outputs (Not Fork)
        run: "true"
        if: |
          ! github.event.pull_request.head.repo.fork
        env:
          SETUP: ${{ toJSON(steps.setup.outputs) }}

      - name: Test actions' outputs
        uses: ./js
        with:
          action: test-action
        env:
          TFACTION_TEST_ACTION: "true"
          GET_TARGET_CONFIG: ${{ toJSON(steps.target-config.outputs) }}
          JS_TARGET_CONFIG: ${{ toJSON(steps.js-target-config.outputs) }}
          GET_GLOBAL_CONFIG: ${{ toJSON(steps.global-config.outputs) }}
          JS_GLOBAL_CONFIG: ${{ toJSON(steps.js-global-config.outputs) }}
          CHECK_TERRAFORM_SKIP: ${{ toJSON(steps.check-terraform-skip.outputs) }}
          JS_CHECK_TERRAFORM_SKIP: ${{ toJSON(steps.js-check-terraform-skip.outputs) }}
          LIST_CHANGED_MODULES: ${{ toJSON(steps.list-changed-modules.outputs) }}
          JS_LIST_CHANGED_MODULES: ${{ toJSON(steps.js-list-changed-modules.outputs) }}
          LIST_MODULE_CALLERS: ${{ toJSON(steps.list-module-callers.outputs) }}
          JS_LIST_MODULE_CALLERS: ${{ toJSON(steps.js-list-module-callers.outputs) }}
          LIST_TARGETS_WITH_CHANGED_FILES: ${{ toJSON(steps.list-targets-with-changed-files.outputs) }}
          JS_LIST_TARGETS_WITH_CHANGED_FILES: ${{ toJSON(steps.js-list-targets-with-changed-files.outputs) }}

      - name: Outputs actions' outputs
        run: "true"
        env:
          GET_TARGET_CONFIG: ${{ toJSON(steps.target-config.outputs) }}
          JS_TARGET_CONFIG: ${{ toJSON(steps.js-target-config.outputs) }}
          GET_GLOBAL_CONFIG: ${{ toJSON(steps.global-config.outputs) }}
          JS_GLOBAL_CONFIG: ${{ toJSON(steps.js-global-config.outputs) }}
          CHECK_TERRAFORM_SKIP: ${{ toJSON(steps.check-terraform-skip.outputs) }}
          JS_CHECK_TERRAFORM_SKIP: ${{ toJSON(steps.js-check-terraform-skip.outputs) }}
          LIST_CHANGED_MODULES: ${{ toJSON(steps.list-changed-modules.outputs) }}
          JS_LIST_CHANGED_MODULES: ${{ toJSON(steps.js-list-changed-modules.outputs) }}
          LIST_MODULE_CALLERS: ${{ toJSON(steps.list-module-callers.outputs) }}
          JS_LIST_MODULE_CALLERS: ${{ toJSON(steps.js-list-module-callers.outputs) }}
          LIST_TARGETS_WITH_CHANGED_FILES: ${{ toJSON(steps.list-targets-with-changed-files.outputs) }}
          JS_LIST_TARGETS_WITH_CHANGED_FILES: ${{ toJSON(steps.js-list-targets-with-changed-files.outputs) }}
