{
  "$id": "https://github.com/suzuki-shunsuke/tfaction/blob/main/schema/tfaction-root.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "tfaction-root.yaml",
  "type": "object",
  "description": "tfaction-root.yaml",
  "required": [
    "target_groups"
  ],
  "properties": {
    "target_groups": {
      "type": "array",
      "description": "the list of target group configuration",
      "minItems": 1,
      "items": {
        "type": "object",
        "description": "target group configuration",
        "required": [
          "working_directory",
          "target"
        ],
        "properties": {
          "working_directory": {
            "type": "string",
            "description": "the prefix of the working directory path"
          },
          "target": {
            "type": "string",
            "description": "the prefix of the target"
          },

          "aws_assume_role_arn": {
            "$ref": "#/$defs/AWSAssumeRoleARN"
          },

          "aws_region": {
            "$ref": "#/$defs/AWSRegion"
          },

          "aws_secrets_manager": {
            "$ref": "#/$defs/AWSSecretsManager"
          },

          "drift_detection": {
            "type": "object",
            "required": [],
            "properties": {
              "enabled": {
                "type": "boolean",
                "description": "If true, drift detection is enabled in the target group",
                "default": "false"
              }
            }
          },

          "envs": {
            "$ref": "#/$defs/Envs"
          },

          "gcp_service_account": {
            "$ref": "#/$defs/GCPServiceAccount"
          },
          "gcp_workload_identity_provider": {
            "$ref": "#/$defs/GCPWorkloadIdentityProvider"
          },
          "gcs_bucket_name_plan_file": {
            "$ref": "#/$defs/GCSBucketNamePlanFile"
          },
          "gcs_bucket_name_tfmigrate_history": {
            "$ref": "#/$defs/GCSBucketNameTfmigrateHistory"
          },

          "providers_lock_opts": {
            "$ref": "#/$defs/TerraformProvidersLockOptions"
          },

          "s3_bucket_name_plan_file": {
            "$ref": "#/$defs/S3BucketNamePlanFile"
          },
          "s3_bucket_name_tfmigrate_history": {
            "$ref": "#/$defs/S3BucketNameTfmigrateHistory"
          },

          "secrets": {
            "$ref": "#/$defs/Secrets"
          },

          "template_dir": {
            "$ref": "#/$defs/TemplateDir"
          },

          "terraform_plan_config": {
            "$ref": "#/$defs/JobConfig",
            "description": "configuration which is used in the job for 'terraform plan'"
          },
          "terraform_apply_config": {
            "$ref": "#/$defs/JobConfig",
            "description": "configuration which is used in the job for 'terraform apply'"
          },
          "tfmigrate_plan_config": {
            "$ref": "#/$defs/JobConfig",
            "description": "configuration which is used in the job for 'tfmigrate plan'"
          },
          "tfmigrate_apply_config": {
            "$ref": "#/$defs/JobConfig",
            "description": "configuration which is used in the job for 'tfmigrate apply'"
          }
        }
      }
    },

    "aqua": {
      "type": "object",
      "description": "configuration about aqua",
      "properties": {
        "update_checksum": {
          "type": "object",
          "required": [],
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "If true, update-checksum is enabled.",
              "default": "false"
            },
            "prune": {
              "type": "boolean",
              "description": "update-checksum-action's prune",
              "default": "false"
            },
            "skip_push": {
              "type": "boolean",
              "description": "update-checksum-action's skip_push",
              "default": "false"
            }
          }
        }
      }
    },

    "base_working_directory": {
      "type": "string",
      "description": "tfaction searches working directories in this directory",
      "default": "current directory"
    },

    "draft_pr": {
      "type": "boolean",
      "description": "If this is true, tfaction creates pull requests as draft",
      "default": false
    },

    "drift_detection": {
      "type": "object",
      "description": "Drift Detection",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "If true, drift detection is enabled in all working directories",
          "default": "true"
        },
        "issue_repo_name": {
          "type": "string",
          "description": "Repository name of GitHub Issues",
          "default": "Repository where GitHub Actions is run"
        },
        "issue_repo_owner": {
          "type": "string",
          "description": "Repository owner of GitHub Issues",
          "default": "Repository where GitHub Actions is run"
        },
        "minimum_detection_interval": {
          "type": "integer",
          "description": "The scheduled workflow picks out working directories whose issues were updated before `minimum_detection_interval` hours",
          "default": 168
        },
        "num_of_issues": {
          "type": "integer",
          "description": "The number of issues that scheduled job handles",
          "default": 1
        }
      }
    },

    "envs": {
      "$ref": "#/$defs/Envs"
    },

    "label_prefixes": {
      "type": "object",
      "description": "Pull Request label prefixes",
      "properties": {
        "target": {
          "type": "string",
          "description": "Pull Request label prefix to specify the target",
          "default": "target:"
        },
        "tfmigrate": {
          "type": "string",
          "description": "Pull Request label prefix to specify the tfmigrate target",
          "default": "tfmigrate:"
        },
        "skip": {
          "type": "string",
          "description": "Pull Request label prefix to skip terraform plan and apply. This is used to migrate states across states with tfmigrate",
          "default": "skip:"
        }
      }
    },

    "providers_lock_opts": {
      "$ref": "#/$defs/TerraformProvidersLockOptions"
    },

    "renovate_login": {
      "type": "string",
      "description": "Renovate App login",
      "default": "renovate[bot]"
    },

    "renovate_terraform_labels": {
      "type": "array",
      "description": "This attribute is ignored if `skip_terraform_by_renovate` is false. If any one of labels in `renovate_terraform_labels` is set to the pull request, tfaction would run `terraform plan` and `terraform apply`. [Detail](https://suzuki-shunsuke.github.io/tfaction/docs/feature/support-skipping-terraform-renovate-pr)",
      "items": {
        "type": "string",
        "description": "Pull Request label name"
      }
    },

    "scaffold_working_directory": {
      "type": "object",
      "description": "configuration about scaffold-working-directory",
      "properties": {
        "skip_adding_aqua_packages": {
          "type": "boolean",
          "description": "If true, creating aqua.yaml and adding packages is skipped",
          "default": "false"
        }
      }
    },

    "skip_create_pr": {
      "type": "boolean",
      "description": "If this is true, tfaction skips creating pull requests. [Detail](https://suzuki-shunsuke.github.io/tfaction/docs/feature/skip-creating-pr)",
      "default": false
    },

    "skip_terraform_by_renovate": {
      "type": "boolean",
      "description": "If this is true, `terraform plan` and `terraform apply` are skipped in case of pull request by Renovate. [Detail](https://suzuki-shunsuke.github.io/tfaction/docs/feature/support-skipping-terraform-renovate-pr)",
      "default": false
    },

    "tflint": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "If true, test action runs tflint",
          "default": "true"
        }
      }
    },

    "tfsec": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "If true, test action runs tfsec",
          "default": "true"
        }
      }
    },

    "trivy": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "If true, test action runs Trivy",
          "default": "false"
        }
      }
    },

    "update_related_pull_requests": {
      "type": "object",
      "description": "update related pull requests",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "If true, related pull requests are updated",
          "default": "true"
        }
      }
    },

    "working_directory_file": {
      "type": "string",
      "description": "working directory configuration file name",
      "default": "tfaction.yaml"
    }
  },
  "$defs": {
    "AWSRegion": {
      "type": "string",
      "description": "AWS Region. This is used for AWS OIDC Authentication, Getting Secrets from AWS Secrets Manager, and so on"
    },
    "TerraformProvidersLockOptions": {
      "type": "string",
      "description": "terraform providers lock command's option",
      "default": "-platform=windows_amd64 -platform=linux_amd64 -platform=darwin_amd64"
    },
    "AWSAssumeRoleARN": {
      "type": "string",
      "description": "AWS Assume Role ARN"
    },
    "GCPServiceAccount": {
      "type": "string",
      "description": "GCP Service Account"
    },
    "GCPWorkloadIdentityProvider": {
      "type": "string",
      "description": "GCP Workload Identity Provider"
    },
    "GCSBucketNamePlanFile": {
      "type": "string",
      "description": "GCS Bucket Name to store Terraform Plan files"
    },
    "GCSBucketNameTfmigrateHistory": {
      "type": "string",
      "description": "GCS Bucket name to store tfmigrate History files"
    },
    "TemplateDir": {
      "type": "string",
      "description": "the template directory path to scaffold a working directory"
    },
    "S3BucketNamePlanFile": {
      "type": "string",
      "description": "S3 Bucket name to store Terraform Plan files"
    },
    "S3BucketNameTfmigrateHistory": {
      "type": "string",
      "description": "S3 Bucket name to store tfmigrate History files"
    },
    "Secrets": {
      "type": "array",
      "description": "list of exported GitHub Secrets",
      "items": {
        "type": "object",
        "description": "exported GitHub Secret",
        "properties": {
          "env_name": {
            "type": "string",
            "description": "exported environment variable",
            "default": "the value of 'secret_name'"
          },
          "secret_name": {
            "type": "string",
            "description": "exported GitHub Secret name",
            "default": "the value of 'env_name'"
          }
        }
      }
    },
    "AWSSecretsManager": {
      "type": "array",
      "description": "list of AWS Secrets Manager's secret and exported environment variables",
      "items": {
        "type": "object",
        "description": "target group configuration",
        "required": [
          "secret_id",
          "envs"
        ],
        "properties": {
          "secret_id": {
            "type": "string",
            "description": "AWS Secrets Manager's secret id"
          },
          "envs": {
            "type": "array",
            "description": "exported environment variables",
            "items": {
              "type": "object",
              "description": "exported environment variable",
              "required": [
                "env_name"
              ],
              "properties": {
                "env_name": {
                  "type": "string",
                  "description": "exported environment variable"
                },
                "secret_key": {
                  "type": "string",
                  "description": "AWS Secrets Manager's secret key"
                }
              }
            }
          }
        }
      }
    },
    "JobConfig": {
      "type": "object",
      "description": "job configuration",
      "required": [],
      "properties": {
        "aws_region": {
          "$ref": "#/$defs/AWSRegion"
        },
        "aws_assume_role_arn": {
          "$ref": "#/$defs/AWSAssumeRoleARN"
        },
        "gcp_service_account": {
          "$ref": "#/$defs/GCPServiceAccount"
        },
        "gcp_workload_identity_provider": {
          "$ref": "#/$defs/GCPWorkloadIdentityProvider"
        },
        "secrets": {
          "$ref": "#/$defs/Secrets"
        },
        "aws_secrets_manager": {
          "$ref": "#/$defs/AWSSecretsManager"
        },
        "envs": {
          "$ref": "#/$defs/Envs"
        }
      }
    },
    "Envs": {
      "type": "object",
      "description": "environment variables"
    }
  }
}
